# Required pipeline level variables:
# - `MONGODB_URI`: For storing test data for SSG for next.js
# - `AZ_DEVOPS_DISCORD_WEBHOOK`: For sending out deployment status update in Discord
pool:
  vmImage: windows-latest

trigger: none
pr: none

resources:
  repositories:
    - repository: scraper
      type: github
      endpoint: RaenonX-PokemonSleep
      name: RaenonX-PokemonSleep/pokemon-sleep-scraper
    - repository: ui
      type: github
      endpoint: RaenonX-PokemonSleep
      name: RaenonX-PokemonSleep/pokemon-sleep-ui-core
  webhooks:
    - webhook: 'Azure CI'
      # Details defined in Azure DevOps service connection
      # > This is the service connection name, not the webhook name.
      connection: 'Pokemon Sleep CI Webhook'
      filters:
        - path: source
          value: pokemon-sleep-ui-core
        - path: branch
          value: refs/heads/main

variables:
  - template: variables/main.yml
  - template: variables/cache/yarn.yml
  - template: variables/cache/next.yml
  - template: variables/repo/ui-core.yml
  - template: variables/repo/scraper.yml

stages:
- stage: Preparation
  jobs:
    - job: Info
      displayName: Trigger Info
      dependsOn: []
      steps:
      - checkout: none

      - powershell: |
          Write-Host '${{ parameters['Azure CI'].commitMessage }}'
          Write-Host '${{ parameters['Azure CI'].link }}'
        displayName: 'Show Trigger Info'

    - job: LintTSC
      displayName: Lint / TSC
      dependsOn: []
      steps:
      - checkout: ui
        submodules: recursive

      - template: templates/setup/yarn.yml

      - template: templates/setup/next.yml

      - script: yarn run tsc
        displayName: 'Check TypeScript'

      # Linting by each file type because it causes OOM on Azure CI
      - script: yarn run lint:css
        displayName: 'Lint CSS'

      - script: yarn run lint:next:ts
        displayName: 'Lint TypeScript'

      - script: yarn run lint:next:js
        displayName: 'Lint JavaScript'

      - script: yarn run lint:next:tsx
        displayName: 'Lint TypeScript (tsx)'

      - script: yarn run lint:next:json
        displayName: 'Lint JSON'

    - job: Test
      displayName: Test
      dependsOn: []
      steps:
        - checkout: ui
          submodules: recursive

        - template: templates/setup/yarn.yml

        - script: yarn run test:ci
          displayName: 'Test Source'

    - job: Data
      displayName: Fetch Data
      dependsOn: []
      steps:
        - template: templates/run/scraper.yml

- stage: Build
  displayName: Build
  jobs:
    - job: Build
      displayName: Build
      steps:
        - checkout: ui
          submodules: recursive

        - template: templates/setup/yarn.yml

        - template: templates/setup/next.yml

        - script: yarn run build
          displayName: 'Build App'
          env:
            NODE_ENV: production
            MONGODB_URI: $(MONGODB_URI)

        - task: ArchiveFiles@2
          displayName: 'Archive Build'
          inputs:
            rootFolderOrFile: .
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(APP_FOLDER_NAME).zip'
            replaceExistingArchive: true

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(APP_FOLDER_NAME).zip'
            ArtifactName: '$(APP_FOLDER_NAME)-artifact'
            publishLocation: 'Container'

        - script: yarn run devops
          displayName: 'Report DevOps Passed'
          env:
            AZ_DEVOPS_DISCORD_WEBHOOK: $(AZ_DEVOPS_DISCORD_WEBHOOK)
            AZ_DEVOPS_TITLE: $(Build.DefinitionName) - $(Build.BuildNumber)
            AZ_DEVOPS_STATUS: $(Agent.JobStatus)
            AZ_DEVOPS_BUILD_URL: $(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)
            AZ_DEVOPS_REQUESTER: $(Build.RequestedFor)
            AZ_DEVOPS_REQUESTER_ID: $(Build.RequestedForId)
            AZ_DEVOPS_QUEUED_BY: $(Build.QueuedBy)
            AZ_DEVOPS_QUEUED_BY_ID: $(Build.QueuedById)

- stage: ReportFailure
  displayName: Report Failure
  condition: or(not(succeeded('Preparation')), not(succeeded('Build')))
  jobs:
    - job: ReportFailure
      displayName: Report Failure

      steps:
        - checkout: ui

        - template: templates/setup/yarn.yml

        - script: yarn run devops
          displayName: 'Report Failure'
          env:
            AZ_DEVOPS_DISCORD_WEBHOOK: $(AZ_DEVOPS_DISCORD_WEBHOOK)
            AZ_DEVOPS_TITLE: $(Build.DefinitionName) - $(Build.BuildNumber)
            # https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml#agent-variables-devops-services
            AZ_DEVOPS_STATUS: 'Failed'
            AZ_DEVOPS_BUILD_URL: $(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)
            AZ_DEVOPS_REQUESTER: $(Build.RequestedFor)
            AZ_DEVOPS_REQUESTER_ID: $(Build.RequestedForId)
            AZ_DEVOPS_QUEUED_BY: $(Build.QueuedBy)
            AZ_DEVOPS_QUEUED_BY_ID: $(Build.QueuedById)
